#bfs=breadth first search [queue]

class graph():
    def __init__(self,n):
        self.n=n
        self.adj=[[]*n for i in range (n)]
    def create_edge(self,x,y):
        self.adj[x-1].append(y-1)
        self.adj[y-1].append(x-1)

    def bsf(self,source):
        visited=[False]*self.n
        result=[]
        q=[]
        q.append(source)
        visited[source]=True
        while len(q)>0:
            s=q.pop(0)
            result.append(s)
            for i in self.adj[s]:
                if visited[i]==False:
                    q.append(i)
                    visited[i]=True
        return result


g=graph(5)
g.create_edge(1,2)
g.create_edge(1,3)
g.create_edge(1,5)
g.create_edge(2,3)
g.create_edge(2,4)
print(graph.bsf(1))


