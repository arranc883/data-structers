#root node can be anything.
#dfs=depth first search [stack]

class graph():
    def __init__(self,n):
        self.n=n
        self.adj=[[]*n for i in range (n)]
        self.visited=[False]*self.n

    def edge(self,x,y):
        self.adj[x].append(y)
        self.adj[y].append(x)
    
    def dfs(self,source):
        self.visited[source]=True
        print(source, end='')
        for i in self.adj[source]:
            if self.visited[i]==False:
                self.dfs(i)

    def start(self,source):
        self.visited=[False]*self.n
        self.dfs(source)



g=graph(7)
g.edge(0,1)
g.edge(0,2)
g.edge(1,2)
g.edge(1,3)
g.edge(2,4)
g.edge(4,5)
g.edge(3,4)
for i in range(7):
    print('\nsource:',i)
    g.start(i)
